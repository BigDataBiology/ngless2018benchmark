ngless "0.8"
import "parallel" version "0.6"
import "mocat" version "0.0"
import "specI" version "0.1"
import "igc" version "0.9"
import "motus" version "0.1"

samples = readlines('../data/gut/gut')
sample = lock1(samples)

input = load_mocat_sample('../data/gut/' + sample)

input = preprocess(input, keep_singles=False) using |read|:
    read = substrim(read, min_quality=25)
    if len(read) < 45:
        discard

mapped = map(input, reference='hg19')

mapped = select(mapped) using |mr|:
    mr = mr.filter(min_match_size=45, min_identity_pc=90, action={unmatch})
    if mr.flag({mapped}):
        discard

input = as_reads(mapped)

mapped = map(input, reference='motus', mode_all=True)
mapped = select(mapped) using |mr|:
    mr = mr.filter(min_match_size=45, min_identity_pc=97, action={drop})
    if not mr.flag({mapped}):
        discard

counted = count(mapped, features=['gene'], multiple={dist1}, normalization={scaled})

motus_table = motus(counted)
collect(motus_table,
        current=sample,
        allneeded=samples,
        ofile='outputs/gut.motus.counts.txt')

input = as_reads(mapped)

mapped = map(input, reference='refmg')
mapped = select(mapped) using |mr|:
    mr = mr.filter(min_match_size=45, min_identity_pc=97, action={drop})
    if not mr.flag({mapped}):
        discard

collect(count(mapped,
                features=['specI_cluster'],
                include_minus1=True),
    current=sample,
    allneeded=samples,
    ofile='outputs/specI.raw.counts.txt')

collect(count(mapped,
                    features=['specI_cluster'],
                    normalization={scaled},
                    include_minus1=True),
    current=sample,
    allneeded=samples,
    ofile='outputs/specI.scaled.counts.txt')

mapped = map(input, reference='igc', mode_all=True)
mapped = select(mapped) using |mr|:
    mr = mr.filter(min_match_size=45, min_identity_pc=95, action={drop})
    if not mr.flag({mapped}):
        discard

counted = count(mapped,
                    features=['OGs'],
                    multiple={dist1},
                    normalization={scaled})
collect(counted,
        current=sample,
        allneeded=samples,
        ofile='outputs/gut.eggNOG.traditional.counts.txt',
        auto_comments=[{hash}, {script}])

